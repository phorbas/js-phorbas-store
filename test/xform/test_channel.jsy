import * as test_bdd from '#test_bdd'
import {expect} from 'chai'

import {validate_backend} from '@phorbas/store/esm/validate_backend.js'
import {kbc_js_map, kbc_channel_pair} from '@phorbas/store'
import {kbc_channel_send, kbc_channel_recv} from '@phorbas/store/esm/xform/channel.js'


test_bdd.describe @ 'kbc channel variants', @::>
  if 1 ::
    validate_backend @ test_bdd, 'kbc_channel_pair', @{}
      kbc_create() ::
        let {kbc_send, kbc_recv} = kbc_channel_pair(kbc_js_map())
        return kbc_send

      kbc_cleanup(ctx, stg) ::
        stg.close_port()

  if 1 ::
    validate_backend @ test_bdd, 'kbc_channel send & recv explicit', @{}
      kbc_create() ::
        let {port1, port2} = new MessageChannel()
        let kbc_send = kbc_channel_send(port1)
        let kbc_recv = kbc_channel_recv(port2, kbc_js_map())
        return kbc_send

      kbc_cleanup(ctx, stg) ::
        stg.close_port()
