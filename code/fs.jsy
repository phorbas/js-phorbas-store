import {bkc_hexkey_api} from './_utils.jsy'

const _enc_binary = {encoding: null}

export default bkc_with_fs
export async function bkc_with_fs(opt={}) ::
  const {stat, readFile, writeFile} = opt.fs
  const base = opt.base || ''
  const ext = opt.ext || ''

  return bkc_hexkey_api @:

    hk_has: hex_key =>
      new Promise @\ resolve, reject ::
        stat @ `${base}${hex_key}${ext}`,
          @\ err ::
            if ! err ::
              resolve(1)
            else if 'ENOENT' === err.code ::
              resolve(0)
            else reject(err)

    hk_get: hex_key =>
      new Promise @\ resolve, reject ::
        readFile @ `${base}${hex_key}${ext}`,
          _enc_binary,
          @\ err, buf ::
            if ! err ::
              resolve @ Uint8Array.from(buf)
            else if 'ENOENT' === err.code ::
              resolve()
            else reject(err)

    hk_set: @\ hex_key, u8_content =>
      new Promise @\ resolve, reject ::
        writeFile @ `${base}${hex_key}${ext}`,
          u8_content, _enc_binary,
          err => err ? resolve(err) : resolve()

