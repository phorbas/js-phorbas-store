import { _bkc_storage_, _as_arrbuf, bkc_arrbuf } from './bkc_abstract.jsy'

export {bkc_arrbuf}
export default bkc_with_js_map
export async function bkc_with_js_map(map_db, opt={}) ::
  const immutable = !! opt.immutable
  const as_copy = opt.as_copy ?? true // default to copy to prevent accidental mutation

  map_db ||= new Map()
  return _bkc_storage_.with @:
    bkc_opt: @{} immutable

    async bkc_exists(hexkey) ::
      return 0 | map_db.has(hexkey)

    async bkc_fetch(hexkey) ::
      let buf = map_db.get(hexkey)
      return buf && _as_arrbuf(buf, as_copy)

    async bkc_store(hexkey, body) ::
      if immutable && map_db.has(hexkey) ::
        return false

      map_db.set(hexkey, await bkc_arrbuf(body))
      return null

