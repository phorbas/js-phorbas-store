import { bkc_arrbuf } from '../core.jsy'
import { _bkc_storage_ } from '../abstract/bkc_abstract_single.jsy'
import {u8_to_base64, base64_to_u8, u8_to_base64url, base64url_to_u8} from 'u8-utils'

export {u8_to_base64, base64_to_u8, u8_to_base64url, base64url_to_u8}
export * from '../core.jsy'


export async function _bkc_web_dom(el_root, opt) ::
  const {dom_find, dom_data, dom_create, b64_encode, b64_decode} = opt
  const immutable = !! opt.immutable

  return _bkc_storage_.with @:
    bkc_opt: @{} immutable

    async bkc_exists(hexkey) ::
      let el = await dom_find(el_root, hexkey)
      return 0 | null != el

    async bkc_fetch(hexkey) ::
      let el = await dom_find(el_root, hexkey)
      let b64_buf = el && await dom_data(el)
      if b64_buf ::
        let body = await b64_decode(b64_buf)
        return body.slice().buffer

    async bkc_store(hexkey, body) ::
      let el = await dom_find(el_root, hexkey)
      if ! el ::
        el = await dom_create(el_root, hexkey)
      else if immutable :: return false

      body = new Uint8Array @ await bkc_arrbuf(body)
      let b64_buf = await b64_encode(body)
      await dom_data(el, b64_buf)
      return null


const _dom_opt = @{}
  dom_find: (el_root, hexkey) =>
    el_root.querySelector('#bk-'+hexkey)

  dom_create(el_root, hexkey) ::
    let el = el_root.ownerDocument.createElement('bk-c')
    el.id = 'bk-' + hexkey
    el_root.append(el)
    return el

  dom_data: (el, content) =>
    undefined !== content
      ? (el.dataset.c = content, content)
      : el.dataset.c


const _dom_b64_opt = { __proto__: _dom_opt, b64_encode: u8_to_base64, b64_decode: base64_to_u8 }
export const bkc_web_dom_b64 = (el_root, opt) =>
  _bkc_web_dom(el_root, {__proto__: _dom_b64_opt, ...opt})


const _dom_b64url_opt = { __proto__: _dom_opt, b64_encode: u8_to_base64url, b64_decode: base64url_to_u8 }
export const bkc_web_dom_b64url = (el_root, opt) =>
  _bkc_web_dom(el_root, {__proto__: _dom_b64url_opt, ...opt})


export @{}
  bkc_web_dom_b64url as bkc_web_dom,
  bkc_web_dom_b64url as default,
