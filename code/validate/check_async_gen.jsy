import {expect} from 'chai'

import {_expect_aiter, _rand_hexkey_batch, _hexkey_with_rand_body} from './check_utils.jsy'

export async function validate_bkc_stream_random_async_gen(_stg_, opt={}) ::
  let test_key_list = _rand_hexkey_batch(opt.count ?? 5)
  let test_body_list = test_key_list.map(_hexkey_with_rand_body(opt.rand_width ?? 32))

  ::
    let ans_stream_exists = _stg_.bkc_stream_exists @
      opt.use_keys ? test_key_list : test_body_list

    _expect_aiter(ans_stream_exists)

    :: // first batch should have the answers
      let ans_batch = ans_stream_exists.next()
      ans_batch = await ans_batch.then()
      expect(ans_batch.done).to.be.false
      expect(ans_batch.value).to.be.an('array').of.length(5)

      let count = 0
      for let [hk, ans] of ans_batch.value ::
        expect(test_key_list.includes(hk)).to.be.true
        ans = await ans.then()
        expect(ans).to.equal(0)
        count++

      expect(count).to.equal(test_key_list.length)

    :: // second batch should be done
      let ans_batch = ans_stream_exists.next()
      ans_batch = await ans_batch.then()
      expect(ans_batch.done).to.be.true

